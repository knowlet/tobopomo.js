// Generated by CoffeeScript 1.10.0
(function() {
  var Tobopomo, layout, root, tsi;

  tsi = require("../data/tsi.json");

  root = typeof global !== "undefined" && global !== null ? global : this;

  layout = {
    "31": "\n",
    "33": "!",
    "34": "\"",
    "35": "#",
    "36": "$",
    "37": "%",
    "38": "&",
    "39": "'",
    "40": "(",
    "41": ")",
    "42": "*",
    "43": "+",
    "44": "ㄝ",
    "45": "ㄦ",
    "46": "ㄡ",
    "47": "ㄥ",
    "48": "ㄢ",
    "49": "ㄅ",
    "50": "ㄉ",
    "51": "ˇ",
    "52": "ˋ",
    "53": "ㄓ",
    "54": "ˊ",
    "55": "˙",
    "56": "ㄚ",
    "57": "ㄞ",
    "58": ":",
    "59": "ㄤ",
    "60": "<",
    "61": "=",
    "62": ">",
    "63": "?",
    "64": "@",
    "91": "[",
    "92": "\\",
    "93": "]",
    "94": "^",
    "95": "_",
    "96": "`",
    "97": "ㄇ",
    "98": "ㄖ",
    "99": "ㄏ",
    "100": "ㄎ",
    "101": "ㄍ",
    "102": "ㄑ",
    "103": "ㄕ",
    "104": "ㄘ",
    "105": "ㄛ",
    "106": "ㄨ",
    "107": "ㄜ",
    "108": "ㄠ",
    "109": "ㄩ",
    "110": "ㄙ",
    "111": "ㄟ",
    "112": "ㄣ",
    "113": "ㄆ",
    "114": "ㄐ",
    "115": "ㄋ",
    "116": "ㄔ",
    "117": "ㄧ",
    "118": "ㄒ",
    "119": "ㄊ",
    "120": "ㄌ",
    "121": "ㄗ",
    "122": "ㄈ",
    "123": "{",
    "124": "|",
    "125": "}",
    "126": "~"
  };

  Tobopomo = (function() {
    var normalise;

    function Tobopomo() {}

    normalise = function(string) {
      return string.replace(/ /g, '');
    };

    root.tobopomo = function(string) {
      var i, j, ref, splitted, temp, total;
      total = 0;
      temp = [];
      for (i = j = 0, ref = string.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (layout[(string[i].charCodeAt(0)).toString()]) {
          temp.push(layout[(string[i].charCodeAt(0)).toString()]);
        } else {
          temp.push(string[i]);
        }
      }
      string = temp.join("");
      splitted = temp.join("").split(/[ "ˇ""ˋ""ˊ""˙"]+/);
      splitted = splitted.map(function(x, index) {
        total += x.length;
        return x = x + string[total + index];
      });
      splitted.pop();
      splitted = splitted.map(function(x) {
        return normalise(x);
      });
      return splitted;
    };

    root.tokanji = function(input, limit) {
      var index, j, output, ref, string, traversed;
      if (limit == null) {
        limit = 5;
      }
      traversed = 0;
      output = [];
      if (Array.isArray(input)) {
        for (index = j = 0, ref = input.length; 0 <= ref ? j < ref : j > ref; index = 0 <= ref ? ++j : --j) {
          string = input.slice(traversed, +index + 1 || 9e9).join("");
          if (tsi[string] && index < (input.length - 1)) {
            continue;
          } else if (tsi[string] && index === (input.length - 1)) {
            output.push(tsi[string].slice(0, limit));
          } else if (tsi[string] === void 0 && index === (input.length - 1)) {
            string = input.slice(traversed, index).join("");
            output.push(tsi[string] ? tsi[string].slice(0, limit) : string);
            output.push(tsi[input[index]] ? tsi[input[index]].slice(0, limit) : input[index]);
          } else {
            string = input.slice(traversed, index).join("");
            output.push(tsi[string] ? tsi[string].slice(0, limit) : string);
            traversed = index;
          }
        }
        return output;
      } else {
        string = normalise(input);
        return tsi[string].slice(0, limit);
      }
    };

    String.prototype.tobopomo = function() {
      return tobopomo(this);
    };

    String.prototype.tokanji = function(limit) {
      return tokanji(this, limit);
    };

    Array.prototype.tokanji = function(limit) {
      return tokanji(this, limit);
    };

    return Tobopomo;

  })();

  module.exports = Tobopomo;

}).call(this);
